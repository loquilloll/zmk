/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define SINGLE_QUOTE_ESC  mt SINGLE_QUOTE ESC
#define LCTL_ESC  mt LCTRL ESC
#define LGUI_KA   am LGUI A
#define LALT_KS   am LALT S
#define LCTL_KD   am LCTRL D
#define LSFT_KF   as LSHFT F
#define RSFT_KJ   as RSHFT J
#define RCTL_KK   am RCTRL K
#define RALT_KL   am RALT L
#define RG_SEMI   am RGUI SEMI

#define LT1_ESC lt 1 ESC

/**
 * Shifted keys, like `&kp lpar`, do not work consistently in Gnome with
 * Wayland. I believe the problem is that ZMK sends key press and release events
 * without any delays in between, and libinput is a bit sloppy with event
 * processing order. A workaround is to define a macro which includes
 * a deliberate delay between steps. But that requires defining a separate macro
 * for each shifted key you want to map.
 *
 * This defines a preprocessor macro to make it as easy as possible to define
 * a lot of ZMK macros for shifted keys.
 * https://github.com/zmkfirmware/zmk/issues/759
 * https://github.com/hallettj/Adv360-Pro-ZMK/blob/hallettj/config/adv360.keymap
 */
#define SHIFTED(sym, macro_label) s_##sym: s_##sym {\
        label = macro_label;\
        compatible = "zmk,behavior-macro";\
        wait-ms = <50>;\
        #binding-cells = <0>;\
        bindings\
            = <&macro_press &kp LSHFT>\
            , <&macro_press &kp sym>\
            , <&macro_release &kp LSHFT>\
            , <&macro_pause_for_release>\
            , <&macro_release &kp sym>\
            ;\
    }

/ {
    behaviors {
        am: alpha_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_MT";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        as: alpha_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_SFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        // Easy alt-tab with alt+backspace thumb using mod-morphs
        bstab: backspace_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_TAB";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp TAB>;
            mods = <MOD_LALT>;
        };
        lt_bspc: layer_tap_backspace_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_BT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            bindings = <&mo>, <&bstab>;
        };
    };
    
    macros {
        SHIFTED(EXCL, "shifted_excl");
        SHIFTED(AT, "shifted_at");
        SHIFTED(HASH, "shifted_hash");
        SHIFTED(DLLR, "shifted_dllr");
        SHIFTED(PRCNT, "shifted_prcnt");
        SHIFTED(CARET, "shifted_caret");
        SHIFTED(UNDER, "shifted_under");
        SHIFTED(QMARK, "shifted_qmark");
        SHIFTED(ASTRK, "shifted_astrk");
        SHIFTED(AMPS, "shifted_amps");
        SHIFTED(TILDE, "shifted_tilde");
        SHIFTED(LBRC, "shifted_lbrc");
        SHIFTED(RBRC, "shifted_rbrc");
        SHIFTED(LPAR, "shifted_lpar");
        SHIFTED(RPAR, "shifted_rpar");
        SHIFTED(LT, "shifted_lt");
        SHIFTED(GT, "shifted_gt");
        SHIFTED(PIPE, "shifted_pipe");
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
// ╭──────────┬─────────┬────────┬────────┬──────────┬───────╮                                                                 ╭────────┬───────┬─────────┬───────────┬─────────┬────────────────╮
     &kp ESC    &kp N1    &kp N2   &kp N3   &kp N4    &kp N5                                                                    &kp N6   &kp N7  &kp N8    &kp N9      &kp N0    &kp BSPC
// ├──────────┼─────────┼────────┼────────┼──────────┤───────┤                                                                 ├────────┼───────┼─────────┼───────────┼─────────┤────────────────┤
     &kp TAB    &kp Q     &kp W    &kp E    &kp R     &kp T                                                                     &kp Y    &kp U   &kp I     &kp O       &kp P     &kp BACKSLASH
// ├──────────┼─────────┼────────┼────────┼──────────┤───────┤                                                                 ├────────┼───────┼─────────┼───────────┼─────────┤────────────────┤
     &LCTL_ESC  &LGUI_KA &LALT_KS &LCTL_KD &LSFT_KF   &kp G                                                                     &kp H   &RSFT_KJ  &RCTL_KK   &RALT_KL    &RG_SEMI   &kp SINGLE_QUOTE_ESC
// ├──────────┼─────────┼────────┼────────┼──────────┤───────┤ ╭─────────┬─────────┬────────╮ ╭─────────┬──────────┬─────────╮ ├────────┼───────┼─────────┼───────────┼─────────┤────────────────┤
     &kp LSHFT  &kp Z    &kp X    &kp C    &kp V      &kp B               &kp CAPS  &kp LGUI   &kp RALT   &kp RCTRL             &kp N    &kp M   &kp COMMA  &kp PERIOD &kp SLASH &mt RSHIFT BSPC
// ├──────────┼─────────┼────────┼────────┼──────────┤───────┤ ├─────────┤─────────┤────────┤ ├─────────┤──────────┤─────────┤ ├────────┼───────┼─────────┼───────────┼─────────┤────────────────┤
                &trans   &trans   &trans   &kp LEFT_GUI         &kp ENTER &lt 1 ESC &kp HOME   &kp PG_UP  &lt_bspc 1 0  &kp SPACE        &trans  &trans     &trans     &trans
// ╰──────────┴─────────┴────────┴────────┴────────────┴───────╯                   ├────────┤ ├─────────┤                      ╰────────┴───────┴─────────┴───────────┴─────────┴────────────────╯
                                                                                    &kp LALT   &kp DEL
//                                                              ╰────────┴─────────┴────────╯ ╰─────────┴──────────┴─────────╯
            >;
        };

        layer_Layer__1 {
            bindings = <
// ╭──────────┬─────────┬────────┬────────┬──────────┬───────╮                                                                 ╭────────┬───────┬─────────┬───────────┬─────────┬────────────────╮
    &bt BT_CLR  &kp F1    &kp F2   &kp F3    &kp F4    &kp F5                                                                    &kp F6   &kp F7  &kp F8    &kp F9     &kp F10    &kp F11
// ├──────────┼─────────┼────────┼────────┼──────────┤───────┤                                                                 ├────────┼───────┼─────────┼───────────┼─────────┤────────────────┤
     &trans     &kp EXCL &kp AT   &kp HASH  &kp DLLR  &kp PRCNT                                                                &kp CARET &kp AMPS &kp ASTRK &kp MINUS  &kp EQUAL  &kp F12
// ├──────────┼─────────┼────────┼────────┼──────────┤───────┤                                                                 ├────────┼───────┼─────────┼───────────┼─────────┤────────────────┤
     &trans    &kp UNDER &kp LEFT &kp DOWN  &kp UP    &kp RIGHT                                                                &kp LBRC  &kp RBRC &kp LPAR  &kp RPAR   &kp KP_PLUS  &trans
// ├──────────┼─────────┼────────┼────────┼──────────┤───────┤ ╭─────────┬─────────┬────────╮ ╭─────────┬──────────┬─────────╮ ├────────┼───────┼─────────┼───────────┼─────────┤────────────────┤
     &trans   &kp TILDE &kp GRAVE &kp LBKT  &kp RBKT  &trans                 &trans    &trans     &trans   &trans              &kp HOME &kp PG_DN &kp PG_UP &kp END    &kp KP_MINUS &trans
// ├──────────┼─────────┼────────┼────────┼──────────┤───────┤ ├─────────┤─────────┤────────┤ ├─────────┤──────────┤─────────┤ ├────────┼───────┼─────────┼───────────┼─────────┤────────────────┤
                &trans     &trans  &trans    &trans               &trans    &trans     &trans     &trans   &trans    &trans     &trans    &trans   &trans     &trans
// ╰──────────┴─────────┴────────┴────────┴────────────┴───────╯                   ├────────┤ ├─────────┤                      ╰────────┴───────┴─────────┴───────────┴─────────┴────────────────╯
                                                                                      &trans     &trans
//                                                              ╰────────┴─────────┴────────╯ ╰─────────┴──────────┴─────────╯
            >;
        };
    };
};